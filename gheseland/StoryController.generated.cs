// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace gheseland.Controllers
{
    public partial class StoryController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected StoryController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Detail()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetAllStories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAllStories);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoriesByIDs()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoriesByIDs);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetFilteredStories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetFilteredStories);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoryImages()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoryImages);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetSimilarStories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSimilarStories);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetNaratorStories()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetNaratorStories);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstoryKeywords()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstoryKeywords);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstorySubjectList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstorySubjectList);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstoryAgeList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstoryAgeList);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoriesBySearch()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoriesBySearch);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> Like()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Like);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public StoryController Actions { get { return MVC.Story; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Story";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Story";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ContactUs = "ContactUs";
            public readonly string Detail = "Detail";
            public readonly string Search = "Search";
            public readonly string Filter = "Filter";
            public readonly string ReportError = "ReportError";
            public readonly string GetAllStories = "GetAllStories";
            public readonly string GetStoriesByIDs = "GetStoriesByIDs";
            public readonly string GetFilteredStories = "GetFilteredStories";
            public readonly string GetBanners = "GetBanners";
            public readonly string GetStoryImages = "GetStoryImages";
            public readonly string GetSimilarStories = "GetSimilarStories";
            public readonly string GetNaratorStories = "GetNaratorStories";
            public readonly string GetstoryKeywords = "GetstoryKeywords";
            public readonly string GetstorySubjectList = "GetstorySubjectList";
            public readonly string GetstoryAgeList = "GetstoryAgeList";
            public readonly string GetStoriesBySearch = "GetStoriesBySearch";
            public readonly string Like = "Like";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ContactUs = "ContactUs";
            public const string Detail = "Detail";
            public const string Search = "Search";
            public const string Filter = "Filter";
            public const string ReportError = "ReportError";
            public const string GetAllStories = "GetAllStories";
            public const string GetStoriesByIDs = "GetStoriesByIDs";
            public const string GetFilteredStories = "GetFilteredStories";
            public const string GetBanners = "GetBanners";
            public const string GetStoryImages = "GetStoryImages";
            public const string GetSimilarStories = "GetSimilarStories";
            public const string GetNaratorStories = "GetNaratorStories";
            public const string GetstoryKeywords = "GetstoryKeywords";
            public const string GetstorySubjectList = "GetstorySubjectList";
            public const string GetstoryAgeList = "GetstoryAgeList";
            public const string GetStoriesBySearch = "GetStoriesBySearch";
            public const string Like = "Like";
        }


        static readonly ActionParamsClass_Detail s_params_Detail = new ActionParamsClass_Detail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Detail DetailParams { get { return s_params_Detail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Detail
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ReportError s_params_ReportError = new ActionParamsClass_ReportError();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReportError ReportErrorParams { get { return s_params_ReportError; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReportError
        {
            public readonly string errorSubject = "errorSubject";
            public readonly string errorText = "errorText";
        }
        static readonly ActionParamsClass_GetAllStories s_params_GetAllStories = new ActionParamsClass_GetAllStories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllStories GetAllStoriesParams { get { return s_params_GetAllStories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllStories
        {
            public readonly string order = "order";
        }
        static readonly ActionParamsClass_GetStoriesByIDs s_params_GetStoriesByIDs = new ActionParamsClass_GetStoriesByIDs();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStoriesByIDs GetStoriesByIDsParams { get { return s_params_GetStoriesByIDs; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStoriesByIDs
        {
            public readonly string ids = "ids";
        }
        static readonly ActionParamsClass_GetFilteredStories s_params_GetFilteredStories = new ActionParamsClass_GetFilteredStories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFilteredStories GetFilteredStoriesParams { get { return s_params_GetFilteredStories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFilteredStories
        {
            public readonly string parameters = "parameters";
        }
        static readonly ActionParamsClass_GetStoryImages s_params_GetStoryImages = new ActionParamsClass_GetStoryImages();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStoryImages GetStoryImagesParams { get { return s_params_GetStoryImages; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStoryImages
        {
            public readonly string storyId = "storyId";
        }
        static readonly ActionParamsClass_GetSimilarStories s_params_GetSimilarStories = new ActionParamsClass_GetSimilarStories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSimilarStories GetSimilarStoriesParams { get { return s_params_GetSimilarStories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSimilarStories
        {
            public readonly string storyId = "storyId";
        }
        static readonly ActionParamsClass_GetNaratorStories s_params_GetNaratorStories = new ActionParamsClass_GetNaratorStories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNaratorStories GetNaratorStoriesParams { get { return s_params_GetNaratorStories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNaratorStories
        {
            public readonly string naratorId = "naratorId";
        }
        static readonly ActionParamsClass_GetstoryKeywords s_params_GetstoryKeywords = new ActionParamsClass_GetstoryKeywords();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetstoryKeywords GetstoryKeywordsParams { get { return s_params_GetstoryKeywords; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetstoryKeywords
        {
            public readonly string storyId = "storyId";
        }
        static readonly ActionParamsClass_GetstorySubjectList s_params_GetstorySubjectList = new ActionParamsClass_GetstorySubjectList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetstorySubjectList GetstorySubjectListParams { get { return s_params_GetstorySubjectList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetstorySubjectList
        {
            public readonly string storyId = "storyId";
        }
        static readonly ActionParamsClass_GetstoryAgeList s_params_GetstoryAgeList = new ActionParamsClass_GetstoryAgeList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetstoryAgeList GetstoryAgeListParams { get { return s_params_GetstoryAgeList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetstoryAgeList
        {
            public readonly string storyId = "storyId";
        }
        static readonly ActionParamsClass_GetStoriesBySearch s_params_GetStoriesBySearch = new ActionParamsClass_GetStoriesBySearch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStoriesBySearch GetStoriesBySearchParams { get { return s_params_GetStoriesBySearch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStoriesBySearch
        {
            public readonly string text = "text";
        }
        static readonly ActionParamsClass_Like s_params_Like = new ActionParamsClass_Like();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Like LikeParams { get { return s_params_Like; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Like
        {
            public readonly string userId = "userId";
            public readonly string storyId = "storyId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string ContactUs = "ContactUs";
                public readonly string Detail = "Detail";
                public readonly string Filter = "Filter";
                public readonly string Index = "Index";
                public readonly string ReportError = "ReportError";
                public readonly string Search = "Search";
            }
            public readonly string ContactUs = "~/Views/Story/ContactUs.cshtml";
            public readonly string Detail = "~/Views/Story/Detail.cshtml";
            public readonly string Filter = "~/Views/Story/Filter.cshtml";
            public readonly string Index = "~/Views/Story/Index.cshtml";
            public readonly string ReportError = "~/Views/Story/ReportError.cshtml";
            public readonly string Search = "~/Views/Story/Search.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_StoryController : gheseland.Controllers.StoryController
    {
        public T4MVC_StoryController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ContactUsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ContactUs()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ContactUs);
            ContactUsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Detail(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DetailOverride(callInfo, id);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            SearchOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FilterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Filter()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Filter);
            FilterOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void ReportErrorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ReportError()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportError);
            ReportErrorOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void ReportErrorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string errorSubject, string errorText);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReportError(string errorSubject, string errorText)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportError);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "errorSubject", errorSubject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "errorText", errorText);
            ReportErrorOverride(callInfo, errorSubject, errorText);
            return callInfo;
        }

        [NonAction]
        partial void GetAllStoriesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string order);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetAllStories(string order)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAllStories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            GetAllStoriesOverride(callInfo, order);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetStoriesByIDsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string ids);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoriesByIDs(string ids)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoriesByIDs);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ids", ids);
            GetStoriesByIDsOverride(callInfo, ids);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetFilteredStoriesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Collections.Generic.IEnumerable<gheseland.ViewModel.Search.FilterViewModel> parameters);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetFilteredStories(System.Collections.Generic.IEnumerable<gheseland.ViewModel.Search.FilterViewModel> parameters)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetFilteredStories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parameters", parameters);
            GetFilteredStoriesOverride(callInfo, parameters);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetBannersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetBanners()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetBanners);
            GetBannersOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetStoryImagesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoryImages(int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoryImages);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            GetStoryImagesOverride(callInfo, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetSimilarStoriesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetSimilarStories(int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSimilarStories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            GetSimilarStoriesOverride(callInfo, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetNaratorStoriesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int naratorId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetNaratorStories(int naratorId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetNaratorStories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "naratorId", naratorId);
            GetNaratorStoriesOverride(callInfo, naratorId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetstoryKeywordsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstoryKeywords(int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstoryKeywords);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            GetstoryKeywordsOverride(callInfo, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetstorySubjectListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstorySubjectList(int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstorySubjectList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            GetstorySubjectListOverride(callInfo, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetstoryAgeListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetstoryAgeList(int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetstoryAgeList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            GetstoryAgeListOverride(callInfo, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetStoriesBySearchOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string text);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetStoriesBySearch(string text)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStoriesBySearch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "text", text);
            GetStoriesBySearchOverride(callInfo, text);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void LikeOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string userId, int storyId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> Like(string userId, int storyId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Like);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "storyId", storyId);
            LikeOverride(callInfo, userId, storyId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
