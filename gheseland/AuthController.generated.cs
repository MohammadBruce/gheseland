// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace gheseland.Controllers
{
    public partial class AuthController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AuthController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RegisterUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegisterUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LoginUser()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LoginUser);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AuthController Actions { get { return MVC.Auth; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Auth";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Auth";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string RegisterUser = "RegisterUser";
            public readonly string LoginUser = "LoginUser";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string RegisterUser = "RegisterUser";
            public const string LoginUser = "LoginUser";
        }


        static readonly ActionParamsClass_RegisterUser s_params_RegisterUser = new ActionParamsClass_RegisterUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RegisterUser RegisterUserParams { get { return s_params_RegisterUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RegisterUser
        {
            public readonly string ext = "ext";
            public readonly string phoneNumber = "phoneNumber";
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_LoginUser s_params_LoginUser = new ActionParamsClass_LoginUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LoginUser LoginUserParams { get { return s_params_LoginUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LoginUser
        {
            public readonly string ext = "ext";
            public readonly string email = "email";
            public readonly string phoneNumber = "phoneNumber";
            public readonly string loginCode = "loginCode";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string RegisterUser = "RegisterUser";
            }
            public readonly string RegisterUser = "~/Views/Auth/RegisterUser.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AuthController : gheseland.Controllers.AuthController
    {
        public T4MVC_AuthController() : base(Dummy.Instance) { }

        [NonAction]
        partial void RegisterUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ext);

        [NonAction]
        public override System.Web.Mvc.ActionResult RegisterUser(string ext)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegisterUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ext", ext);
            RegisterUserOverride(callInfo, ext);
            return callInfo;
        }

        [NonAction]
        partial void RegisterUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ext, string phoneNumber, string email);

        [NonAction]
        public override System.Web.Mvc.ActionResult RegisterUser(string ext, string phoneNumber, string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RegisterUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ext", ext);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "phoneNumber", phoneNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            RegisterUserOverride(callInfo, ext, phoneNumber, email);
            return callInfo;
        }

        [NonAction]
        partial void LoginUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ext, string email, string phoneNumber, string loginCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult LoginUser(string ext, string email, string phoneNumber, string loginCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LoginUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ext", ext);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "phoneNumber", phoneNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "loginCode", loginCode);
            LoginUserOverride(callInfo, ext, email, phoneNumber, loginCode);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
